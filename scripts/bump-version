#!/usr/bin/env bash

set -euo pipefail

ESC="$(echo -e "\e")"

die() {
  echo "Error:" "$@" >&2
  exit 1
}

: ${DRY_RUN:=0}

[[ "${1-}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?$ ]] \
  || die "usage is scripts/bump-version <version>"

VERSION="$1"

if [[ -z "${BASH_REMATCH[1]}" ]]; then
  RELEASE=1
else
  RELEASE=0
fi

cd "$(git rev-parse --show-toplevel)"

[[ -z "$(git status --porcelain)" ]] \
  || die "repository is not in a clean state"

# Dancing around macOS sed
if [[ -d "/opt/homebrew/opt/gnu-sed/libexec/gnubin" ]]; then
  export PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
fi

sed --version | grep -q 'sed (GNU sed)' \
  || die "non-GNU sed"

cargo test --locked --all-features \
  || die "tests failed; fix your stuff"

cargo check --locked --all-features \
  || die "cargo check failed; fix your stuff"

cargo fmt --all -- --check \
  || die "rustfmt failed; clean up your stuff"

cargo clippy --all --all-features \
  || die "clippy failed; clean up your stuff"

cargo build --locked --all-features \
  || die "cargo build failed; fix your stuff"

cargo audit --deny warnings --deny unmaintained --deny unsound --deny yanked \
  || die "audit failed; fix libs"

# Bump Cargo.{toml,lock}
sed -i -Ee 's/^version = "[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?"$/version = "'"$VERSION"'"/' nr/Cargo.toml \
  && git status --porcelain | grep -q '^ M nr/Cargo.toml$' \
  && cargo check \
  || die "failed to update nr/Cargo.toml"

# Bump CHANGELOG.md; only when doing an actual release
if [[ "$RELEASE" == "1" ]]; then

  sed -i -Ee 's/^\[unreleased\]:(.*)\.\.\.main *$/[v'"$VERSION"']:\1...v'"$VERSION"'}/' CHANGELOG.md \
    && sed -i -Ee 's/^## \[Unreleased\]\[unreleased\]$/## [Unreleased][unreleased]\n\n[unreleased]: https:\/\/github.com\/mjhanninen\/nreplops-tool\/compare\/v'"$VERSION"'...main\n\n## [Version '"$VERSION"'][v'"$VERSION"']/' CHANGELOG.md \
    && git status --porcelain | grep -q '^ M CHANGELOG.md$' \
    || die "failed to update CHANGELOG.md"

fi

if [[ $RELEASE == 1 ]]; then
  TAG_MESSAGE="Release ${VERSION}"
else
  TAG_MESSAGE="Release candidate ${VERSION}"
fi

# Commit and release tag
if [[ "${DRY_RUN:-}" == 1 ]]; then

  git diff
  cat <<EOF
${ESC}[0;33mNOTE: This is a dry-run.  In actual run the above changes would have been
      committed with the following commands:

        git add nr/Cargo.toml Cargo.lock CHANGELOG.md
        git commit -m "Bump version to ${VERSION}"
        git tag -a -m "$TAG_MESSAGE" "v${VERSION}"
${ESC}[0m
EOF

else

  git add nr/Cargo.toml Cargo.lock CHANGELOG.md
  git commit -m "Bump version to ${VERSION}"
  git tag -a -m "$TAG_MESSAGE" "v${VERSION}"
  git show HEAD

fi
